name: Process New Pokedex Entry

on:
  pull_request_target:
    types: [opened, synchronize, reopened]
    paths:
      - 'submissions/*.yaml'

jobs:
  update-pokedex:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      # 1️⃣ Checkout PR branch (even from forks)
      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      # 2️⃣ Setup Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # 3️⃣ Install dependencies
      - name: Install dependencies
        run: npm ci

      # 4️⃣ Run validation & update script
      - name: Run Validation & Update Script
        id: validate
        run: node scripts/update-pokedex.js ${{ github.event.pull_request.number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
          GITHUB_REPOSITORY: ${{ github.repository }}

      # 5️⃣ Comment if validation fails
      - name: Comment if validation fails
        if: failure()
        uses: peter-evans/create-or-update-comment@v4
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ❌ **Pokedex Validation Failed**
            - Ensure your YAML file is inside `/submissions/`
            - Pokémon name must exist on [PokeAPI](https://pokeapi.co/)
            - YAML format matches the required template
      # 6️⃣ Commit JSON changes if validation passed
      - name: Commit JSON Changes
        if: success()
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: 'Pokedex Update: Added new entry from PR #${{ github.event.pull_request.number }}'
          files: public/data/pokedex_data.json
          branch: main
          commit_user_name: 'GitHub Actions Bot'
          commit_user_email: 'actions@github.com'

      # 7️⃣ Install GitHub CLI for auto-merge
      - name: Install GitHub CLI
        if: success()
        run: |
          sudo apt-get update
          sudo apt-get install -y gh
      # 8️⃣ Auto-merge PR
      - name: Auto Merge PR
        if: success()
        run: |
          echo "${{ secrets.GH_PAT }}" | gh auth login --with-token
          gh pr merge ${{ github.event.pull_request.number }} --squash --delete-branch --admin
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}